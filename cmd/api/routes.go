package main

import (
	"net/http"

	_ "github.com/aerosystems/auth-service/docs" // docs are generated by Swag CLI, you have to import it.
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	"github.com/go-chi/cors"
	httpSwagger "github.com/swaggo/http-swagger"
)

func (app *Config) routes() http.Handler {
	mux := chi.NewRouter()

	mux.Group(func(mux chi.Router) {
		// Public routes
		mux.Use(cors.Handler(cors.Options{
			AllowedOrigins:   []string{"*"},
			AllowedMethods:   []string{"GET", "POST", "OPTIONS"},
			AllowedHeaders:   []string{"Accept", "Content-Type"},
			ExposedHeaders:   []string{"Link"},
			AllowCredentials: true,
			MaxAge:           300,
		}))
		mux.Use(middleware.Heartbeat("/ping"))

		mux.Get("/docs/*", httpSwagger.Handler(
			httpSwagger.URL("doc.json"), // The url pointing to API definition
		))

		mux.Post("/v1/login", app.BaseHandler.Login)
		mux.Post("/v1/register", app.BaseHandler.Register)
		mux.Post("/v1/confirm", app.BaseHandler.Confirm)
		mux.Post("/v1/reset-password", app.BaseHandler.ResetPassword)

		// Private routes
		mux.Group(func(mux chi.Router) {
			mux.Use(cors.Handler(cors.Options{
				AllowedOrigins:   []string{"*"},
				AllowedMethods:   []string{"POST", "OPTIONS"},
				AllowedHeaders:   []string{"Accept", "Authorization", "Content-Type"},
				ExposedHeaders:   []string{"Link"},
				AllowCredentials: true,
				MaxAge:           300,
			}))

			mux.Use(app.TokenAuthMiddleware)

			mux.Post("/v1/logout", app.BaseHandler.Logout)
			mux.Post("/v1/token/refresh", app.BaseHandler.RefreshToken)
			mux.Get("/v1/token/validate", app.BaseHandler.ValidateToken)
		})
	})

	return mux
}
